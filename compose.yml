volumes:
  db-data:

services:
  db:
    image: postgres:18
    ports:
      - ${DATABASE_PORT:-5432}:5432
    environment:
      - POSTGRES_USER=${DATABASE_USER}
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
      - POSTGRES_DB=${DATABASE_DB}
    volumes:
      - db-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 1s
      timeout: 5s
      retries: 10
  # start: otel #
  jaeger:
    image: jaegertracing/all-in-one
    ports:
      # https://www.jaegertracing.io/docs/1.6/getting-started/#all-in-one-docker-image
      # frontend
      - 16686:16686
      - 14268
      - 14250
    environment:
      - METRICS_STORAGE_TYPE=prometheus
      - PROMETHEUS_QUERY_SUPPORT_SPANMETRICS_CONNECTOR=true
      - COLLECTOR_OTLP_ENABLED=true
  # don't use contrib on prod
  # https://opentelemetry.io/blog/2024/otel-collector-anti-patterns/#3--not-using-the-right-collector-distribution-or-not-building-your-own-distribution
  otel-collector:
    image: otel/opentelemetry-collector-contrib
    command: ["--config=/conf/otel-collector-config.yml"]
    volumes:
      - ./otel-collector-config.yml:/conf/otel-collector-config.yml
    ports:
      - 13133:13133 # health_check extension
      - 4317:4317 # OTLP gRPC receiver
    depends_on:
      - jaeger
  # end: otel #
